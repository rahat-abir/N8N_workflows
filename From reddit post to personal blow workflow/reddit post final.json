{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyHour",
              "minute": 30
            }
          ]
        }
      },
      "name": "Every day at 9",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        740,
        -140
      ],
      "id": "93b46e48-0662-4634-ab7e-99d12a01c87a"
    },
    {
      "parameters": {
        "operation": "getAll",
        "subreddit": "LegalAdviceIndia",
        "limit": 1,
        "filters": {
          "category": "top"
        }
      },
      "name": "Get Hot Posts",
      "type": "n8n-nodes-base.reddit",
      "typeVersion": 1,
      "position": [
        680,
        -320
      ],
      "id": "c2cde6b3-b9b7-4e78-acc8-e7037831c00e",
      "credentials": {
        "redditOAuth2Api": {
          "id": "noZjMsRyDmShPxQp",
          "name": "Reddit account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "operation": "update",
        "documentURL": "1sxL0DYjhy01983QAHXkas_H62Q1flcs92D7M-UZEluw",
        "actionsUi": {
          "actionFields": [
            {
              "action": "insert",
              "text": "={{ $json.title }}{{ $json.author }}{{ $json.category }}{{ $json.content }}"
            }
          ]
        }
      },
      "name": "Create Google Doc",
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 1,
      "position": [
        1380,
        -380
      ],
      "id": "1f323e1d-29d3-4757-aaed-69a40f43eceb",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "yJW6vmOmIyl5g5Y3",
          "name": "Google Docs account 2"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is a post I found online. Please analyze it according to the instructions.\n\nPost Title:{{ $json.TITLE }}\n\nPost Content:\n{{ $json.Story }}\n",
        "options": {
          "systemMessage": "You are a Legal Expert in indian laws for Advocate Sudhir Rao, Supreme Court of India. You specialize in Indian law and will be provided with a post’s title and body. You will receive the title and content; you must rewrite the entire story and title in such a way that the city name, the person's name, date, address, or any other personal information is changed to random names. Use made-up names for any company and person we get in the posts. Your output must consist of two parts:\n\n1. **Clean-text metadata**  \n   - Title: __________________________  \n   - Slug: ___________________________  (lowercase, hyphen-separated)\n\n2. HTML-formatted metadata =\n(use only `<h1>` for section headers and `<p>` for content; use `<ul><li>` for bullet points when needed):\n-Add this unrelated image source before the story section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nThe heading should be \"If you are stuck in such a situation,  here is what to do.\"\nThe story (do not include the title again here)\nAdvice in such cases  \nApplicable Sections of Law  \nIf you are the complainant\n-Add this unrelated image source before “If you are the victim” section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nIf you are the victim\nHow the police behave in such cases\nFAQs people normally have\n-Add this unrelated image source before “What evidence is required?” section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nWhat evidence is required?\nHow long will the investigation take?\n<em>Advocate Sudhir Rao, Supreme Court of India</em>\n\n**Requirements:**  \n- only output the content, do not add headers like \"**1. Clean-text metadata**\\\" and \"**2. HTML-formatted metadata**\"\n- Reflect Indian statutory law and case law, new acts such as BNS and BNSS. Do not use  IPC and CrPC\n- Use emojis in the headers for better readability\n- Do not repeat the submitted title in the body.  \n- Use only `<h1>`, `<p>`, `<ul>`, and `<li>` tags.  \n- Keep metadata (Title, Category, Slug) in plain text above the HTML block.  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1140,
        -140
      ],
      "id": "8f100003-c35f-44c0-80f1-4ad7592b528e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {
          "maxOutputTokens": 10000,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1100,
        80
      ],
      "id": "c237ca8f-bd53-4e3e-b6ed-cd1bebe8cee8",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "l2C2iRDApWh04ZKB",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "title": "={{ $json.title }}",
        "additionalFields": {
          "content": "={{ $json.content }}",
          "slug": "={{ $json.slug }}"
        }
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        1640,
        -140
      ],
      "id": "304719c9-cd62-44ba-9a15-9021ac168d90",
      "name": "Create a post",
      "credentials": {
        "wordpressApi": {
          "id": "2aJHlgLdTgi50hWn",
          "name": "Wordpress account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Function node code to extract title, fixed author, category, and remaining content\nreturn items.map(item => {\n  const raw = item.json.output || '';\n\n  // Extract title\n  const titleMatch = raw.match(/1\\.\\s\\*\\*Title:\\*\\*\\s*([^\\n]+)/);\n  const title = titleMatch ? titleMatch[1].trim() : '';\n\n  // Extract category\n  const categoryMatch = raw.match(/2\\.\\s\\*\\*Category:\\*\\*\\s*([^\\n]+)/);\n  const category = categoryMatch ? categoryMatch[1].trim() : '';\n\n  // Remove the Title and Category lines from the raw text\n  const content = raw\n    .replace(/1\\.\\s\\*\\*Title:\\*\\*\\s*[^\\n]+\\n\\n?/, '')\n    .replace(/2\\.\\s\\*\\*Category:\\*\\*\\s*[^\\n]+\\n\\n?/, '')\n    .trim();\n\n  // Fixed author\n  const author = 'Advocate Sudhir Rao';\n\n  return {\n    json: {\n      title,\n      author,\n      category,\n      content\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        -380
      ],
      "id": "d54694f5-3ff8-4bef-a8de-7a9275304bf1",
      "name": "Code1",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1260,
        40
      ],
      "id": "a651363a-5825-4f8b-bbde-96e44ad0d76c",
      "name": "Simple Memory",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const title   = item.json.title;\n  const content = item.json.selftext || '';\n  return {\n    json: {\n      title,\n      content\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        -380
      ],
      "id": "46efe52e-0ae0-41c5-8ad6-4656983c2783",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "https://docs.google.com/spreadsheets/d/167Qw2QwDQv_OqYE0J39cNzAo7DT30zugBDNpsA5qlP0/edit?usp=sharing",
          "mode": "url"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/167Qw2QwDQv_OqYE0J39cNzAo7DT30zugBDNpsA5qlP0/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        980,
        -140
      ],
      "id": "b82217ce-63de-4921-9520-04885d423138",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "hkMZlqjR5s6SFQnP",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "instructions": "Please parse the following for every multiple outputs as:  \n- “title”: the value after “Title:”  \n- “slug”: the value after “Slug:”  \n- “content”: all remaining text after those fields with HTML notations. Do not include the slug here\n",
        "codeGeneratedForPrompt": "Please parse the following for every multiple outputs as:  \n- “title”: the value after “Title:”  \n- “slug”: the value after “Slug:”  \n- “content”: all remaining text after those fields with HTML notations. Do not include the slug here\n",
        "jsCode": "const items = $input.all();\nconst parsedItems = items.map((item) => {\n  const output = item.json.output;\n  const titleIndex = output.indexOf(\"Title:\");\n  const slugIndex = output.indexOf(\"Slug:\");\n  const contentIndex = output.indexOf(\"<img\");\n\n  const title = output.substring(titleIndex + 6, slugIndex).trim();\n  const slug = output.substring(slugIndex + 5, contentIndex).trim();\n  const content = output.substring(contentIndex).trim();\n\n  return {\n    title,\n    slug,\n    content,\n  };\n});\n\nreturn parsedItems;\n"
      },
      "type": "n8n-nodes-base.aiTransform",
      "typeVersion": 1,
      "position": [
        1460,
        -140
      ],
      "id": "5c6a1ba4-0494-4a15-b5a2-f0da651c11e9",
      "name": "AI Transform"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "feedUrl": "https://www.reddit.com/r/legaladviceindia/.rss"
      },
      "type": "n8n-nodes-base.rssFeedReadTrigger",
      "typeVersion": 1,
      "position": [
        820,
        300
      ],
      "id": "3b77b172-169a-4f81-9a35-d676201c0461",
      "name": "RSS Feed Trigger"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is a post I found online. Please analyze it according to the instructions.\n\nPost Title:{{ $json.title }}\n\nPost Content:\n\n{{ $json.contentSnippet }}",
        "options": {
          "systemMessage": "You are a Legal Expert in indian laws for Advocate Sudhir Rao, Supreme Court of India. You specialize in Indian law and will be provided with a post’s title and body. You will receive the title and content; you must rewrite the entire story and title in such a way that the city name, the person's name, date, address, or any other personal information is changed to random names. Use made-up names for any company and person we get in the posts. Your output must consist of two parts:\n\n1. **Clean-text metadata**  \n   - Title: __________________________  \n   - Slug: ___________________________  (lowercase, hyphen-separated)\n\n2. HTML-formatted metadata =\n(use only `<h1>` for section headers and `<p>` for content; use `<ul><li>` for bullet points when needed):\n-Add this unrelated image source before the story section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nThe heading should be \"If you are stuck in such a situation,  here is what to do.\"\nThe story (do not include the title again here)\nAdvice in such cases  \nApplicable Sections of Law  \nIf you are the complainant\n-Add this unrelated image source before “If you are the victim” section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nIf you are the victim\nHow the police behave in such cases\nFAQs people normally have\n-Add this unrelated image source before “What evidence is required?” section with HTML notation \"https://sudhirrao.com/wp-content/uploads/2024/09/Section-117-BNS-in-Hindi.webp\"\nWhat evidence is required?\nHow long will the investigation take?\n<em>Advocate Sudhir Rao, Supreme Court of India</em>\n\n**Requirements:**  \n- only output the content, do not add headers like \"**1. Clean-text metadata**\\\" and \"**2. HTML-formatted metadata**\"\n- Reflect Indian statutory law and case law, new acts such as BNS and BNSS. Do not use  IPC and CrPC\n- Use emojis in the headers for better readability\n- Do not repeat the submitted title in the body.  \n- Use only `<h1>`, `<p>`, `<ul>`, and `<li>` tags.  \n- Keep metadata (Title, Category, Slug) in plain text above the HTML block.  \n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1160,
        300
      ],
      "id": "7b99a5de-7478-47b3-8f96-21e23755d642",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {
          "maxOutputTokens": 10000,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1140,
        480
      ],
      "id": "392bf7bf-9ec1-446a-bf0e-28711f998aaa",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "l2C2iRDApWh04ZKB",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "title": "={{ $json.title }}",
        "additionalFields": {
          "content": "={{ $json.content }}",
          "slug": "={{ $json.slug }}"
        }
      },
      "type": "n8n-nodes-base.wordpress",
      "typeVersion": 1,
      "position": [
        1660,
        300
      ],
      "id": "c4b37fc9-9eb9-44e2-adfa-be76fcc2c3f6",
      "name": "Create a post1",
      "credentials": {
        "wordpressApi": {
          "id": "2aJHlgLdTgi50hWn",
          "name": "Wordpress account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1280,
        480
      ],
      "id": "5ffa71d1-a96b-4e07-8e17-d203a3a848d5",
      "name": "Simple Memory1",
      "disabled": true
    },
    {
      "parameters": {
        "instructions": "Please parse the following for every multiple outputs as:  \n- “title”: the value after “Title:”  \n- “slug”: the value after “Slug:”  \n- “content”: all remaining text after those fields with HTML notations. Do not include the slug here\n",
        "codeGeneratedForPrompt": "Please parse the following for every multiple outputs as:  \n- “title”: the value after “Title:”  \n- “slug”: the value after “Slug:”  \n- “content”: all remaining text after those fields with HTML notations. Do not include the slug here\n",
        "jsCode": "const items = $input.all();\nconst parsedItems = items.map((item) => {\n  const output = item.json.output;\n  const titleIndex = output.indexOf(\"Title:\");\n  const slugIndex = output.indexOf(\"Slug:\");\n  const contentIndex = output.indexOf(\"<img\");\n\n  const title = output.substring(titleIndex + 6, slugIndex).trim();\n  const slug = output.substring(slugIndex + 5, contentIndex).trim();\n  const content = output.substring(contentIndex).trim();\n\n  return {\n    title,\n    slug,\n    content,\n  };\n});\n\nreturn parsedItems;\n"
      },
      "type": "n8n-nodes-base.aiTransform",
      "typeVersion": 1,
      "position": [
        1480,
        300
      ],
      "id": "4b7ac1cc-22a0-41f6-b091-36bbab0a91d1",
      "name": "AI Transform1"
    }
  ],
  "pinData": {},
  "connections": {
    "Every day at 9": {
      "main": [
        []
      ]
    },
    "Get Hot Posts": {
      "main": [
        []
      ]
    },
    "Create Google Doc": {
      "main": [
        []
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Transform",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Transform": {
      "main": [
        [
          {
            "node": "Create a post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "AI Transform1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Transform1": {
      "main": [
        [
          {
            "node": "Create a post1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Feed Trigger": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1f90f271-169d-442b-8a12-bb2cf0737c57",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d5a1ed6fa9878f39da44ad65f02931a36fe6c2e105826ff83a63c4516f67b2a5"
  },
  "id": "G92myD9HPIFIDLbY",
  "tags": []
}